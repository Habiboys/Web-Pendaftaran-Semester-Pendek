
</main>
<div id="notifications"></div>

    <footer class="footer mt-28 footer-center p-10 bg-primary text-primary-content">
      <div>
        <p class="font-bold">
          Depertemen Sistem Informasi - Universitas Andalas
        </p>
        <p>Copyright Â© 2024 - All right reserved</p>
      </div>
      <div>
        <div class="grid grid-flow-col gap-4">
          <a href="#"
            ><svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              class="fill-current"
            >
              <path
                d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"
              ></path>
            </svg>
          </a>
          <a href="#"
            ><svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              class="fill-current"
            >
              <path
                d="M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.985-8 4.015z"
              ></path>
            </svg>
          </a>
          <a href="#"
            ><svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              class="fill-current"
            >
              <path
                d="M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z"
              ></path>
            </svg>
          </a>
        </div>
      </div>
    </footer>
 
    <script>
      const beamsTokenProvider = new PusherPushNotifications.TokenProvider({
  url: "/auth/beams",
});

const beamsClient = new PusherPushNotifications.Client({
    instanceId: '4a0b3731-deb1-48f4-81ae-5ed378988f77', // Sesuaikan dengan instanceId Anda
    tokenProvider: beamsTokenProvider,
  });
  beamsClient
        .start()
        .then(() => beamsClient.addDeviceInterest('daftarsp'))
        .then(() => beamsClient.setUserId('<%= userId %>', beamsTokenProvider))
        .then(() => console.log('spesifik sukses'))
        .catch(console.error);


      // const beamsClient2 = new PusherPushNotifications.Client({
      //     instanceId: '4a0b3731-deb1-48f4-81ae-5ed378988f77',
      // });

 
      // beamsClient2.start()
       
      //     .then(() => console.log('Successfully registered and subscribed!'))
      //     .catch(console.error);

      if ('serviceWorker' in navigator) {
          navigator.serviceWorker.register('/service-worker.js')
              .then(function(registration) {
                  console.log('Service Worker registered with scope:', registration.scope);
              }).catch(function(error) {
                  console.error('Service Worker registration failed:', error);
              });

          navigator.serviceWorker.addEventListener('message', function(event) {
              console.log('Received message from service worker:', event);
              if (event.data.type === 'PUSH_NOTIFICATION') {
                  const notificationData = event.data.data;
                  displayNotificationInPage(notificationData);
                  displaylisnotifpage(notificationData);
              }
          });
      }
      let notificationsContainer = document.getElementById('notifications');
     
function displayNotificationInPage(notification) {
  const notificationIcon = document.getElementById('notification-icon');
  notificationIcon.setAttribute('data-icon', 'mdi:bell-badge');
  console.log('Displaying notification:', notification);
  const notificationElement = document.createElement('div');
  notificationElement.className = 'bg-base-100 text-primary alert alert-info shadow-lg fixed right-4 z-50 max-w-xs flex items-center justify-between';
  notificationElement.style.bottom = '24px'; // Mengatur jarak notifikasi baru dari bawah layar
  notificationElement.innerHTML = `
<div class="text-sm" style="text-align: left;">
   <a href="${notification.deep_link}">
    <span><strong>${notification.title}</strong></span>
    <p>${notification.body}</p>
   </a>
</div>
    <button class="btn btn-sm btn-circle btn-ghost">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
  `;
  notificationsContainer.appendChild(notificationElement); // Menambahkan notifikasi baru di akhir container

  const existingNotifications = notificationsContainer.querySelectorAll('div');
  existingNotifications.forEach((notification, index) => {
    if (index === 0) {
      // Notifikasi baru (posisi pertama) sudah diatur jaraknya di atas
      return;
    }
    notification.style.bottom = `${(index * 48) + 16}px`; // Asumsi tinggi notifikasi 44px + 4px margin bawah
  });

  // Hilangkan notifikasi setelah 5 detik jika tidak ditutup secara manual
  const timeout = setTimeout(() => {
    notificationElement.remove();
    // Atur ulang posisi notifikasi yang tersisa
    const remainingNotifications = notificationsContainer.querySelectorAll('div');
    remainingNotifications.forEach((notification, index) => {
      notification.style.bottom = `${(index * 48) + 16}px`;
    });
  }, 5000);

  // Fungsi untuk menutup notifikasi secara manual
  const closeButton = notificationElement.querySelector('button');
  closeButton.addEventListener('click', () => {
    clearTimeout(timeout); // Batalkan penghapusan otomatis
    notificationElement.remove();
    // Atur ulang posisi notifikasi yang tersisa
    const remainingNotifications = notificationsContainer.querySelectorAll('div');
    remainingNotifications.forEach((notification, index) => {
      notification.style.bottom = `${(index * 48) + 16}px`;
    });
  });
}


let newnotifdiv = document.getElementById('new-notifpage');
     
function displaylisnotifpage(notification) {
  // Mendapatkan waktu saat ini
  const currentTime = new Date();

  // Mendefinisikan nama-nama bulan dalam Bahasa Inggris
  const months = ["January", "February", "March", "April", "May", "June",
                  "July", "August", "September", "October", "November", "December"];

  // Mendapatkan informasi tanggal, bulan, tahun, jam, dan menit
  const day = currentTime.getDate();
  const month = months[currentTime.getMonth()];
  const year = currentTime.getFullYear();
  const hours = currentTime.getHours().toString().padStart(2, '0');
  const minutes = currentTime.getMinutes().toString().padStart(2, '0');

  // Membuat format waktu yang diinginkan
  const formattedTime = `${day} ${month} ${year}, ${hours}:${minutes}`;

  // Membuat elemen notifikasi
  const notificationElement = document.createElement('div');
  notificationElement.innerHTML = `
    <a href="${notification.deep_link}" class="block p-4 bg-white rounded-lg shadow-md mb-4 hover:shadow-lg transition-shadow">
      <div>
        <h3 class="text-lg font-semibold mb-2">${notification.title}</h3>
        <p class="text-gray-700 mb-2">${notification.body}</p>
        <p class="text-sm text-gray-500">${formattedTime}</p>
      </div>
    </a>
  `;

  // Insert the new notificationElement at the beginning of newnotifdiv
  if (newnotifdiv.firstChild) {
    newnotifdiv.insertBefore(notificationElement, newnotifdiv.firstChild);
  } else {
    newnotifdiv.appendChild(notificationElement);
  }
}

  </script>


</body>
</html>
